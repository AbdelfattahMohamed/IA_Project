//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TipsTravels_System.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TripsDBEntities : DbContext
    {
        public TripsDBEntities()
            : base("name=TripsDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Inbox> Inboxes { get; set; }
        public virtual DbSet<Person> Persons { get; set; }
        public virtual DbSet<Post> Posts { get; set; }
        public virtual DbSet<PostsStatu> PostsStatus { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
    
        public virtual int InsertUsers(string p1, string p2, string p3, string p4, byte[] p5, Nullable<int> p6, string p7, string p8)
        {
            var p1Parameter = p1 != null ?
                new ObjectParameter("p1", p1) :
                new ObjectParameter("p1", typeof(string));
    
            var p2Parameter = p2 != null ?
                new ObjectParameter("p2", p2) :
                new ObjectParameter("p2", typeof(string));
    
            var p3Parameter = p3 != null ?
                new ObjectParameter("p3", p3) :
                new ObjectParameter("p3", typeof(string));
    
            var p4Parameter = p4 != null ?
                new ObjectParameter("p4", p4) :
                new ObjectParameter("p4", typeof(string));
    
            var p5Parameter = p5 != null ?
                new ObjectParameter("p5", p5) :
                new ObjectParameter("p5", typeof(byte[]));
    
            var p6Parameter = p6.HasValue ?
                new ObjectParameter("p6", p6) :
                new ObjectParameter("p6", typeof(int));
    
            var p7Parameter = p7 != null ?
                new ObjectParameter("p7", p7) :
                new ObjectParameter("p7", typeof(string));
    
            var p8Parameter = p8 != null ?
                new ObjectParameter("p8", p8) :
                new ObjectParameter("p8", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUsers", p1Parameter, p2Parameter, p3Parameter, p4Parameter, p5Parameter, p6Parameter, p7Parameter, p8Parameter);
        }
    
        public virtual int UpdateUsers(string p1, string p2, string p3, string p4, byte[] p5, string p6, Nullable<int> p7)
        {
            var p1Parameter = p1 != null ?
                new ObjectParameter("p1", p1) :
                new ObjectParameter("p1", typeof(string));
    
            var p2Parameter = p2 != null ?
                new ObjectParameter("p2", p2) :
                new ObjectParameter("p2", typeof(string));
    
            var p3Parameter = p3 != null ?
                new ObjectParameter("p3", p3) :
                new ObjectParameter("p3", typeof(string));
    
            var p4Parameter = p4 != null ?
                new ObjectParameter("p4", p4) :
                new ObjectParameter("p4", typeof(string));
    
            var p5Parameter = p5 != null ?
                new ObjectParameter("p5", p5) :
                new ObjectParameter("p5", typeof(byte[]));
    
            var p6Parameter = p6 != null ?
                new ObjectParameter("p6", p6) :
                new ObjectParameter("p6", typeof(string));
    
            var p7Parameter = p7.HasValue ?
                new ObjectParameter("p7", p7) :
                new ObjectParameter("p7", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUsers", p1Parameter, p2Parameter, p3Parameter, p4Parameter, p5Parameter, p6Parameter, p7Parameter);
        }
    }
}
